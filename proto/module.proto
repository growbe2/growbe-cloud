syntax = "proto3";

enum ActorType {
    MANUAL_USER_ACTOR = 0;
    DURATION_ACTOR = 1;
    ALARM_ACTOR = 2;
    VIRTUAL_ACTOR = 3;
}

message Actor {
    ActorType type = 1;
    string id = 2;
    string name = 3;
}

message ActorOwnership {
    string moduleId = 1;
    string property = 2;
}

message ActorWithOwnership {
    Actor actor = 1;
    repeated ActorOwnership ownerships = 2;
}

message ModuleData {
    string id = 1;
    string name = 2;

    int32 readCount = 4;
    string boardVersion = 5;
    bool plug = 6;
    int32 atIndex = 7;
}

message THLModuleData {
    float humidity = 2;
    float airTemperature = 3;

    int32 timestamp = 9;
}

message SOILModuleData {
   int32 p0 = 1;
   int32 p1 = 2;
   int32 p2 = 3;
   int32 p3 = 4;
   int32 p4 = 5;
   int32 p5 = 6;
   int32 p6 = 7;
   int32 p7 = 8;

   int32 timestamp = 9;
}

message SOILProbeConfig {
    int32 low = 1;
    int32 high = 2;
}

message SOILModuleConfig {
    SOILProbeConfig p0 = 1;
    SOILProbeConfig p1 = 2;
    SOILProbeConfig p2 = 3;
    SOILProbeConfig p3 = 4;
    SOILProbeConfig p4 = 5;
    SOILProbeConfig p5 = 6;
    SOILProbeConfig p6 = 7;
    SOILProbeConfig p7 = 8;
}


enum CalibrationStep {
    READY_CALIBRATION = 0;
    LOW_CALIBRATION = 1;
    HIGH_CALIBRATION = 2;
    ERROR_CALIBRATION = 3;
    WAITING_CONFIRMATION_CALIBRATION = 4;
}

enum CalibrationStepStatus {
    INSUFFISANT_DATA_STATUS = 0;
    ENOUGHT_DATA_STATUS = 1;
    ERROR_STATUS = 2;
    AWAITING_STEP_STATUS = 3;
}

enum CalibrationError {
    NONE_ERROR = 0;
    ALREADY_STARTED_ERROR = 1;
    INSTABLE_DATA_ERROR = 2;
    NOT_ENOUGHT_DATA_ERROR = 3;
}

// Message to start the calibration request
message SOILCalibrationStart {}

// Message to configure the current step of the request
message SOILCalibrationStep {
    CalibrationStep requested_step = 1;
}

// Event produce by the process for the cloud to display information to the user
message SOILCalibrationStepEvent {
    CalibrationStep step = 1;
    CalibrationStepStatus status = 2;
    CalibrationError erro = 3;
    string messag = 4;

    repeated SOILModuleData low = 5;
    repeated SOILModuleData high = 6;
}

message WAModuleData {
    int32 PH = 2;
    int32 EC = 3;
    int32 temperature = 4;

    int32 timestamp = 9;
}

enum RelayOutletMode {
    MANUAL = 0;
    ALARM = 1;
    VIRTUAL = 2;
}

message CronItem {
    int32 minute = 1;
    int32 hour = 2;
    int32 dayMonth = 3;
    int32 month = 4;
    int32 dayWeek = 5;
}

message AlarmConfig {
    CronItem begining = 1;
    CronItem end = 2;
}

message ManualConfig {
    bool state = 1;
    int32 duration = 2;
}

message RelayOutletData {
    bool state = 1;
}

message VirtualRelayConfig {}

message RelayOutletConfig {
    RelayOutletMode mode = 1;
    
    AlarmConfig alarm = 2;
    ManualConfig manual =3;
    VirtualRelayConfig virtual = 4;
}

message VirtualRelayPropertyConfig {
    int32 property = 1;
    bool falseState = 2;
    bool trueState = 3;
}

message VirtualRelaytItem {
    // action port for the properties
    repeated VirtualRelayPropertyConfig properties = 1;
}

// VirtualOutlet is the definition of the virtual relay
message VirtualRelay {
    string name = 1;
    map<string, VirtualRelayItem> relays = 2;
}

// Contains all the virtual outlet
message VirtualRelays {
    repeated VirtualRelay relays = 1;
}

message VirtualRelayData {
    RelayOutletData data = 1;
    int32 timestamp = 2;
}

message RelayModuleData {
    RelayOutletData p0 = 1;
    RelayOutletData p1 = 2;
    RelayOutletData p2 = 3;
    RelayOutletData p3 = 4;
    RelayOutletData p4 = 5;
    RelayOutletData p5 = 6;
    RelayOutletData p6 = 7;
    RelayOutletData p7 = 8;

    int32 timestamp = 9;

    Actor actor = 10;
}

message RelayModuleConfig {
    RelayOutletConfig p0 = 1;
    RelayOutletConfig p1 = 2;
    RelayOutletConfig p2 = 3;
    RelayOutletConfig p3 = 4;
    RelayOutletConfig p4 = 5;
    RelayOutletConfig p5 = 6;
    RelayOutletConfig p6 = 7;
    RelayOutletConfig p7 = 8;

    int32 timestamp = 9;

}

message WCModuleData {
    RelayOutletData p0 = 1;
    RelayOutletData p1 = 2;
    RelayOutletData p2 = 3;

    RelayOutletData drain = 4;
    RelayOutletData pump0 = 5;
    RelayOutletData pump1 = 6;
    RelayOutletData pump2 = 7;
    RelayOutletData pump3 = 8;

    int32 timestamp = 9;

    Actor actor = 10;
}

message WCModuleConfig {
    RelayOutletConfig p0 = 1;
    RelayOutletConfig p1 = 2;
    RelayOutletConfig p2 = 3;

    RelayOutletConfig drain = 4;
    RelayOutletConfig pump0 = 5;
    RelayOutletConfig pump1 = 6;
    RelayOutletConfig pump2 = 7;
    RelayOutletConfig pump3 = 8;
}



