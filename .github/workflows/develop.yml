name: growbe cloud pipeline
on:
  push:
    branches:
      - develop

jobs:
  buildnrelease:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        program: [portal, cloud]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
      - name: Login docker
        run: docker login https://docker.pkg.github.com -u berlingoqc -p $GITHUB_ACCESS_TOKEN
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.PAT }}
      - name: Updating version
        run: echo "VERSION=$(npm run getversion:develop --silent)" >> $GITHUB_ENV
      - name: Build
        run: cd growbe-${{matrix.program}} && npm --no-git-tag-version version ${VERSION} && npm run docker:build
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.PAT }}
      - name: Publish
        run: cd growbe-${{matrix.program}} && npm run docker:push
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.PAT }}
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login docker
        run: docker login https://docker.pkg.github.com -u berlingoqc -p $GITHUB_ACCESS_TOKEN
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.PAT }}
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Updating version
        run: echo "VERSION=$(npm run getversion:develop --silent)" >> $GITHUB_ENV
      - name: Setting npmrc
        run: echo "${{ secrets.NPMRC }}" > $HOME/.npmrc
      - name: Install pgsql client
        run: sudo apt-get update && sudo apt-get install postgresql
      - name: Running test 
        run: ./scripts/integration.sh test
  deploy:
    runs-on: ubuntu-latest
    needs: [buildnrelease]
    steps:
      - uses: actions/checkout@v1
      - name: Updating version
        run: echo "VERSION=$(npm run getversion:develop --silent)" >> $GITHUB_ENV
      - name: Deploy to dev
        run: 'mkdir $HOME/.ssh && echo "${{secrets.SSH2}}" > $HOME/.ssh/id_rsa && chmod 700 $HOME/.ssh/id_rsa && ssh -oStrictHostKeyChecking=accept-new -p 2222 wq@api.growbe.ca "cd growbe-cloud && ./deploy.sh ${VERSION}"'
  notify:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Notify
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has been deployed to dev. ${{ github.event.head_commit.message }}'
