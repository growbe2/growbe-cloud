import * as Long from "long";

import * as $protobuf from "protobufjs";
/** AlarmZone enum. */
namespace AlarmZone {

    /** UNKNOW value */
    let UNKNOW: number;

    /** MIDDLE value */
    let MIDDLE: number;

    /** VERY_LOW value */
    let VERY_LOW: number;

    /** LOW value */
    let LOW: number;

    /** HIGH value */
    let HIGH: number;

    /** VERY_HIGH value */
    let VERY_HIGH: number;
}

/** Represents an AlarmZoneValue. */
export class AlarmZoneValue implements IAlarmZoneValue {

    /**
     * Constructs a new AlarmZoneValue.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAlarmZoneValue);

    /** AlarmZoneValue value. */
    public value: number;

    /** AlarmZoneValue offset. */
    public offset: number;

    /**
     * Creates a new AlarmZoneValue instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AlarmZoneValue instance
     */
    public static create(properties?: IAlarmZoneValue): AlarmZoneValue;

    /**
     * Encodes the specified AlarmZoneValue message. Does not implicitly {@link AlarmZoneValue.verify|verify} messages.
     * @param message AlarmZoneValue message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAlarmZoneValue, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AlarmZoneValue message, length delimited. Does not implicitly {@link AlarmZoneValue.verify|verify} messages.
     * @param message AlarmZoneValue message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAlarmZoneValue, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AlarmZoneValue message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AlarmZoneValue
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AlarmZoneValue;

    /**
     * Decodes an AlarmZoneValue message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AlarmZoneValue
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AlarmZoneValue;

    /**
     * Verifies an AlarmZoneValue message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AlarmZoneValue message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AlarmZoneValue
     */
    public static fromObject(object: { [k: string]: any }): AlarmZoneValue;

    /**
     * Creates a plain object from an AlarmZoneValue message. Also converts values to other types if specified.
     * @param message AlarmZoneValue
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AlarmZoneValue, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AlarmZoneValue to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a FieldAlarm. */
export class FieldAlarm implements IFieldAlarm {

    /**
     * Constructs a new FieldAlarm.
     * @param [properties] Properties to set
     */
    constructor(properties?: IFieldAlarm);

    /** FieldAlarm moduleId. */
    public moduleId: string;

    /** FieldAlarm property. */
    public property: string;

    /** FieldAlarm veryLow. */
    public veryLow?: (IAlarmZoneValue|null);

    /** FieldAlarm low. */
    public low?: (IAlarmZoneValue|null);

    /** FieldAlarm high. */
    public high?: (IAlarmZoneValue|null);

    /** FieldAlarm veryHigh. */
    public veryHigh?: (IAlarmZoneValue|null);

    /**
     * Creates a new FieldAlarm instance using the specified properties.
     * @param [properties] Properties to set
     * @returns FieldAlarm instance
     */
    public static create(properties?: IFieldAlarm): FieldAlarm;

    /**
     * Encodes the specified FieldAlarm message. Does not implicitly {@link FieldAlarm.verify|verify} messages.
     * @param message FieldAlarm message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IFieldAlarm, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified FieldAlarm message, length delimited. Does not implicitly {@link FieldAlarm.verify|verify} messages.
     * @param message FieldAlarm message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IFieldAlarm, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a FieldAlarm message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns FieldAlarm
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): FieldAlarm;

    /**
     * Decodes a FieldAlarm message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns FieldAlarm
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): FieldAlarm;

    /**
     * Verifies a FieldAlarm message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a FieldAlarm message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns FieldAlarm
     */
    public static fromObject(object: { [k: string]: any }): FieldAlarm;

    /**
     * Creates a plain object from a FieldAlarm message. Also converts values to other types if specified.
     * @param message FieldAlarm
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: FieldAlarm, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this FieldAlarm to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a FieldAlarmEvent. */
export class FieldAlarmEvent implements IFieldAlarmEvent {

    /**
     * Constructs a new FieldAlarmEvent.
     * @param [properties] Properties to set
     */
    constructor(properties?: IFieldAlarmEvent);

    /** FieldAlarmEvent moduleId. */
    public moduleId: string;

    /** FieldAlarmEvent property. */
    public property: string;

    /** FieldAlarmEvent previousZone. */
    public previousZone: AlarmZone;

    /** FieldAlarmEvent currentZone. */
    public currentZone: AlarmZone;

    /** FieldAlarmEvent currentValue. */
    public currentValue: number;

    /** FieldAlarmEvent previousValue. */
    public previousValue: number;

    /**
     * Creates a new FieldAlarmEvent instance using the specified properties.
     * @param [properties] Properties to set
     * @returns FieldAlarmEvent instance
     */
    public static create(properties?: IFieldAlarmEvent): FieldAlarmEvent;

    /**
     * Encodes the specified FieldAlarmEvent message. Does not implicitly {@link FieldAlarmEvent.verify|verify} messages.
     * @param message FieldAlarmEvent message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IFieldAlarmEvent, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified FieldAlarmEvent message, length delimited. Does not implicitly {@link FieldAlarmEvent.verify|verify} messages.
     * @param message FieldAlarmEvent message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IFieldAlarmEvent, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a FieldAlarmEvent message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns FieldAlarmEvent
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): FieldAlarmEvent;

    /**
     * Decodes a FieldAlarmEvent message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns FieldAlarmEvent
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): FieldAlarmEvent;

    /**
     * Verifies a FieldAlarmEvent message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a FieldAlarmEvent message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns FieldAlarmEvent
     */
    public static fromObject(object: { [k: string]: any }): FieldAlarmEvent;

    /**
     * Creates a plain object from a FieldAlarmEvent message. Also converts values to other types if specified.
     * @param message FieldAlarmEvent
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: FieldAlarmEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this FieldAlarmEvent to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a GrowbeMainboardConfig. */
export class GrowbeMainboardConfig implements IGrowbeMainboardConfig {

    /**
     * Constructs a new GrowbeMainboardConfig.
     * @param [properties] Properties to set
     */
    constructor(properties?: IGrowbeMainboardConfig);

    /** GrowbeMainboardConfig hearthBeath. */
    public hearthBeath: number;

    /**
     * Creates a new GrowbeMainboardConfig instance using the specified properties.
     * @param [properties] Properties to set
     * @returns GrowbeMainboardConfig instance
     */
    public static create(properties?: IGrowbeMainboardConfig): GrowbeMainboardConfig;

    /**
     * Encodes the specified GrowbeMainboardConfig message. Does not implicitly {@link GrowbeMainboardConfig.verify|verify} messages.
     * @param message GrowbeMainboardConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IGrowbeMainboardConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified GrowbeMainboardConfig message, length delimited. Does not implicitly {@link GrowbeMainboardConfig.verify|verify} messages.
     * @param message GrowbeMainboardConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IGrowbeMainboardConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a GrowbeMainboardConfig message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns GrowbeMainboardConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GrowbeMainboardConfig;

    /**
     * Decodes a GrowbeMainboardConfig message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns GrowbeMainboardConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GrowbeMainboardConfig;

    /**
     * Verifies a GrowbeMainboardConfig message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a GrowbeMainboardConfig message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns GrowbeMainboardConfig
     */
    public static fromObject(object: { [k: string]: any }): GrowbeMainboardConfig;

    /**
     * Creates a plain object from a GrowbeMainboardConfig message. Also converts values to other types if specified.
     * @param message GrowbeMainboardConfig
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: GrowbeMainboardConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this GrowbeMainboardConfig to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a HelloWord. */
export class HelloWord implements IHelloWord {

    /**
     * Constructs a new HelloWord.
     * @param [properties] Properties to set
     */
    constructor(properties?: IHelloWord);

    /** HelloWord version. */
    public version: string;

    /** HelloWord cloudVersion. */
    public cloudVersion: string;

    /** HelloWord RTC. */
    public RTC: string;

    /**
     * Creates a new HelloWord instance using the specified properties.
     * @param [properties] Properties to set
     * @returns HelloWord instance
     */
    public static create(properties?: IHelloWord): HelloWord;

    /**
     * Encodes the specified HelloWord message. Does not implicitly {@link HelloWord.verify|verify} messages.
     * @param message HelloWord message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IHelloWord, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified HelloWord message, length delimited. Does not implicitly {@link HelloWord.verify|verify} messages.
     * @param message HelloWord message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IHelloWord, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a HelloWord message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns HelloWord
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): HelloWord;

    /**
     * Decodes a HelloWord message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns HelloWord
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): HelloWord;

    /**
     * Verifies a HelloWord message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a HelloWord message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns HelloWord
     */
    public static fromObject(object: { [k: string]: any }): HelloWord;

    /**
     * Creates a plain object from a HelloWord message. Also converts values to other types if specified.
     * @param message HelloWord
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: HelloWord, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this HelloWord to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a VersionRelease. */
export class VersionRelease implements IVersionRelease {

    /**
     * Constructs a new VersionRelease.
     * @param [properties] Properties to set
     */
    constructor(properties?: IVersionRelease);

    /** VersionRelease version. */
    public version: string;

    /** VersionRelease channel. */
    public channel: string;

    /**
     * Creates a new VersionRelease instance using the specified properties.
     * @param [properties] Properties to set
     * @returns VersionRelease instance
     */
    public static create(properties?: IVersionRelease): VersionRelease;

    /**
     * Encodes the specified VersionRelease message. Does not implicitly {@link VersionRelease.verify|verify} messages.
     * @param message VersionRelease message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IVersionRelease, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified VersionRelease message, length delimited. Does not implicitly {@link VersionRelease.verify|verify} messages.
     * @param message VersionRelease message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IVersionRelease, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a VersionRelease message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns VersionRelease
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): VersionRelease;

    /**
     * Decodes a VersionRelease message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns VersionRelease
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): VersionRelease;

    /**
     * Verifies a VersionRelease message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a VersionRelease message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns VersionRelease
     */
    public static fromObject(object: { [k: string]: any }): VersionRelease;

    /**
     * Creates a plain object from a VersionRelease message. Also converts values to other types if specified.
     * @param message VersionRelease
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: VersionRelease, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this VersionRelease to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents an UpdateExecute. */
export class UpdateExecute implements IUpdateExecute {

    /**
     * Constructs a new UpdateExecute.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUpdateExecute);

    /** UpdateExecute version. */
    public version: string;

    /** UpdateExecute restarted. */
    public restarted: boolean;

    /**
     * Creates a new UpdateExecute instance using the specified properties.
     * @param [properties] Properties to set
     * @returns UpdateExecute instance
     */
    public static create(properties?: IUpdateExecute): UpdateExecute;

    /**
     * Encodes the specified UpdateExecute message. Does not implicitly {@link UpdateExecute.verify|verify} messages.
     * @param message UpdateExecute message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUpdateExecute, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified UpdateExecute message, length delimited. Does not implicitly {@link UpdateExecute.verify|verify} messages.
     * @param message UpdateExecute message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUpdateExecute, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an UpdateExecute message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns UpdateExecute
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UpdateExecute;

    /**
     * Decodes an UpdateExecute message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns UpdateExecute
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UpdateExecute;

    /**
     * Verifies an UpdateExecute message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an UpdateExecute message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns UpdateExecute
     */
    public static fromObject(object: { [k: string]: any }): UpdateExecute;

    /**
     * Creates a plain object from an UpdateExecute message. Also converts values to other types if specified.
     * @param message UpdateExecute
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: UpdateExecute, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this UpdateExecute to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a RestartRequest. */
export class RestartRequest implements IRestartRequest {

    /**
     * Constructs a new RestartRequest.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRestartRequest);

    /**
     * Creates a new RestartRequest instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RestartRequest instance
     */
    public static create(properties?: IRestartRequest): RestartRequest;

    /**
     * Encodes the specified RestartRequest message. Does not implicitly {@link RestartRequest.verify|verify} messages.
     * @param message RestartRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRestartRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RestartRequest message, length delimited. Does not implicitly {@link RestartRequest.verify|verify} messages.
     * @param message RestartRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRestartRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RestartRequest message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RestartRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RestartRequest;

    /**
     * Decodes a RestartRequest message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RestartRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RestartRequest;

    /**
     * Verifies a RestartRequest message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RestartRequest message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RestartRequest
     */
    public static fromObject(object: { [k: string]: any }): RestartRequest;

    /**
     * Creates a plain object from a RestartRequest message. Also converts values to other types if specified.
     * @param message RestartRequest
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RestartRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RestartRequest to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a LocalConnection. */
export class LocalConnection implements ILocalConnection {

    /**
     * Constructs a new LocalConnection.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILocalConnection);

    /** LocalConnection ssid. */
    public ssid: string;

    /** LocalConnection signalLevel. */
    public signalLevel: number;

    /** LocalConnection ipAddr. */
    public ipAddr: string;

    /**
     * Creates a new LocalConnection instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LocalConnection instance
     */
    public static create(properties?: ILocalConnection): LocalConnection;

    /**
     * Encodes the specified LocalConnection message. Does not implicitly {@link LocalConnection.verify|verify} messages.
     * @param message LocalConnection message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILocalConnection, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LocalConnection message, length delimited. Does not implicitly {@link LocalConnection.verify|verify} messages.
     * @param message LocalConnection message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILocalConnection, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LocalConnection message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LocalConnection
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LocalConnection;

    /**
     * Decodes a LocalConnection message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LocalConnection
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LocalConnection;

    /**
     * Verifies a LocalConnection message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LocalConnection message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LocalConnection
     */
    public static fromObject(object: { [k: string]: any }): LocalConnection;

    /**
     * Creates a plain object from a LocalConnection message. Also converts values to other types if specified.
     * @param message LocalConnection
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LocalConnection, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LocalConnection to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a GrowbeMessage. */
export class GrowbeMessage implements IGrowbeMessage {

    /**
     * Constructs a new GrowbeMessage.
     * @param [properties] Properties to set
     */
    constructor(properties?: IGrowbeMessage);

    /** GrowbeMessage topic. */
    public topic: string;

    /** GrowbeMessage messageType. */
    public messageType: number;

    /** GrowbeMessage body. */
    public body: Uint8Array;

    /**
     * Creates a new GrowbeMessage instance using the specified properties.
     * @param [properties] Properties to set
     * @returns GrowbeMessage instance
     */
    public static create(properties?: IGrowbeMessage): GrowbeMessage;

    /**
     * Encodes the specified GrowbeMessage message. Does not implicitly {@link GrowbeMessage.verify|verify} messages.
     * @param message GrowbeMessage message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IGrowbeMessage, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified GrowbeMessage message, length delimited. Does not implicitly {@link GrowbeMessage.verify|verify} messages.
     * @param message GrowbeMessage message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IGrowbeMessage, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a GrowbeMessage message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns GrowbeMessage
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GrowbeMessage;

    /**
     * Decodes a GrowbeMessage message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns GrowbeMessage
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GrowbeMessage;

    /**
     * Verifies a GrowbeMessage message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a GrowbeMessage message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns GrowbeMessage
     */
    public static fromObject(object: { [k: string]: any }): GrowbeMessage;

    /**
     * Creates a plain object from a GrowbeMessage message. Also converts values to other types if specified.
     * @param message GrowbeMessage
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: GrowbeMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this GrowbeMessage to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a HearthBeath. */
export class HearthBeath implements IHearthBeath {

    /**
     * Constructs a new HearthBeath.
     * @param [properties] Properties to set
     */
    constructor(properties?: IHearthBeath);

    /** HearthBeath rtc. */
    public rtc: string;

    /**
     * Creates a new HearthBeath instance using the specified properties.
     * @param [properties] Properties to set
     * @returns HearthBeath instance
     */
    public static create(properties?: IHearthBeath): HearthBeath;

    /**
     * Encodes the specified HearthBeath message. Does not implicitly {@link HearthBeath.verify|verify} messages.
     * @param message HearthBeath message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IHearthBeath, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified HearthBeath message, length delimited. Does not implicitly {@link HearthBeath.verify|verify} messages.
     * @param message HearthBeath message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IHearthBeath, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a HearthBeath message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns HearthBeath
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): HearthBeath;

    /**
     * Decodes a HearthBeath message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns HearthBeath
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): HearthBeath;

    /**
     * Verifies a HearthBeath message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a HearthBeath message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns HearthBeath
     */
    public static fromObject(object: { [k: string]: any }): HearthBeath;

    /**
     * Creates a plain object from a HearthBeath message. Also converts values to other types if specified.
     * @param message HearthBeath
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: HearthBeath, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this HearthBeath to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a Log. */
export class Log implements ILog {

    /**
     * Constructs a new Log.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILog);

    /** Log timestamp. */
    public timestamp: number;

    /** Log log. */
    public log: string;

    /**
     * Creates a new Log instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Log instance
     */
    public static create(properties?: ILog): Log;

    /**
     * Encodes the specified Log message. Does not implicitly {@link Log.verify|verify} messages.
     * @param message Log message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILog, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Log message, length delimited. Does not implicitly {@link Log.verify|verify} messages.
     * @param message Log message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILog, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Log message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Log
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Log;

    /**
     * Decodes a Log message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Log
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Log;

    /**
     * Verifies a Log message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Log message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Log
     */
    public static fromObject(object: { [k: string]: any }): Log;

    /**
     * Creates a plain object from a Log message. Also converts values to other types if specified.
     * @param message Log
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Log, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Log to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** ActionCode enum. */
namespace ActionCode {

    /** PARSING value */
    let PARSING: number;

    /** MODULE_CONFIG value */
    let MODULE_CONFIG: number;

    /** MAINBOARD_CONFIG value */
    let MAINBOARD_CONFIG: number;

    /** RTC_SET value */
    let RTC_SET: number;

    /** SYNC_REQUEST value */
    let SYNC_REQUEST: number;

    /** ADD_ALARM value */
    let ADD_ALARM: number;

    /** REMOVE_ALARM value */
    let REMOVE_ALARM: number;

    /** RESTART value */
    let RESTART: number;
}

/** Represents an ActionResponse. */
export class ActionResponse implements IActionResponse {

    /**
     * Constructs a new ActionResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IActionResponse);

    /** ActionResponse action. */
    public action: ActionCode;

    /** ActionResponse status. */
    public status: number;

    /** ActionResponse msg. */
    public msg: string;

    /**
     * Creates a new ActionResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ActionResponse instance
     */
    public static create(properties?: IActionResponse): ActionResponse;

    /**
     * Encodes the specified ActionResponse message. Does not implicitly {@link ActionResponse.verify|verify} messages.
     * @param message ActionResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IActionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ActionResponse message, length delimited. Does not implicitly {@link ActionResponse.verify|verify} messages.
     * @param message ActionResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IActionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an ActionResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ActionResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ActionResponse;

    /**
     * Decodes an ActionResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ActionResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ActionResponse;

    /**
     * Verifies an ActionResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an ActionResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ActionResponse
     */
    public static fromObject(object: { [k: string]: any }): ActionResponse;

    /**
     * Creates a plain object from an ActionResponse message. Also converts values to other types if specified.
     * @param message ActionResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ActionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ActionResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a RTCTime. */
export class RTCTime implements IRTCTime {

    /**
     * Constructs a new RTCTime.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRTCTime);

    /** RTCTime second. */
    public second: number;

    /** RTCTime minute. */
    public minute: number;

    /** RTCTime hour. */
    public hour: number;

    /** RTCTime day. */
    public day: number;

    /** RTCTime month. */
    public month: number;

    /** RTCTime year. */
    public year: number;

    /** RTCTime tz. */
    public tz: string;

    /**
     * Creates a new RTCTime instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RTCTime instance
     */
    public static create(properties?: IRTCTime): RTCTime;

    /**
     * Encodes the specified RTCTime message. Does not implicitly {@link RTCTime.verify|verify} messages.
     * @param message RTCTime message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRTCTime, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RTCTime message, length delimited. Does not implicitly {@link RTCTime.verify|verify} messages.
     * @param message RTCTime message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRTCTime, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RTCTime message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RTCTime
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RTCTime;

    /**
     * Decodes a RTCTime message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RTCTime
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RTCTime;

    /**
     * Verifies a RTCTime message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RTCTime message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RTCTime
     */
    public static fromObject(object: { [k: string]: any }): RTCTime;

    /**
     * Creates a plain object from a RTCTime message. Also converts values to other types if specified.
     * @param message RTCTime
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RTCTime, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RTCTime to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a ModuleData. */
export class ModuleData implements IModuleData {

    /**
     * Constructs a new ModuleData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IModuleData);

    /** ModuleData id. */
    public id: string;

    /** ModuleData name. */
    public name: string;

    /** ModuleData readCount. */
    public readCount: number;

    /** ModuleData boardVersion. */
    public boardVersion: string;

    /** ModuleData plug. */
    public plug: boolean;

    /** ModuleData atIndex. */
    public atIndex: number;

    /**
     * Creates a new ModuleData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ModuleData instance
     */
    public static create(properties?: IModuleData): ModuleData;

    /**
     * Encodes the specified ModuleData message. Does not implicitly {@link ModuleData.verify|verify} messages.
     * @param message ModuleData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IModuleData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ModuleData message, length delimited. Does not implicitly {@link ModuleData.verify|verify} messages.
     * @param message ModuleData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IModuleData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ModuleData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ModuleData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ModuleData;

    /**
     * Decodes a ModuleData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ModuleData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ModuleData;

    /**
     * Verifies a ModuleData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ModuleData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ModuleData
     */
    public static fromObject(object: { [k: string]: any }): ModuleData;

    /**
     * Creates a plain object from a ModuleData message. Also converts values to other types if specified.
     * @param message ModuleData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ModuleData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ModuleData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a THLModuleData. */
export class THLModuleData implements ITHLModuleData {

    /**
     * Constructs a new THLModuleData.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITHLModuleData);

    /** THLModuleData humidity. */
    public humidity: number;

    /** THLModuleData airTemperature. */
    public airTemperature: number;

    /** THLModuleData timestamp. */
    public timestamp: number;

    /**
     * Creates a new THLModuleData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns THLModuleData instance
     */
    public static create(properties?: ITHLModuleData): THLModuleData;

    /**
     * Encodes the specified THLModuleData message. Does not implicitly {@link THLModuleData.verify|verify} messages.
     * @param message THLModuleData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITHLModuleData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified THLModuleData message, length delimited. Does not implicitly {@link THLModuleData.verify|verify} messages.
     * @param message THLModuleData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITHLModuleData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a THLModuleData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns THLModuleData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): THLModuleData;

    /**
     * Decodes a THLModuleData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns THLModuleData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): THLModuleData;

    /**
     * Verifies a THLModuleData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a THLModuleData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns THLModuleData
     */
    public static fromObject(object: { [k: string]: any }): THLModuleData;

    /**
     * Creates a plain object from a THLModuleData message. Also converts values to other types if specified.
     * @param message THLModuleData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: THLModuleData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this THLModuleData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a SOILModuleData. */
export class SOILModuleData implements ISOILModuleData {

    /**
     * Constructs a new SOILModuleData.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISOILModuleData);

    /** SOILModuleData p0. */
    public p0: number;

    /** SOILModuleData p1. */
    public p1: number;

    /** SOILModuleData p2. */
    public p2: number;

    /** SOILModuleData p3. */
    public p3: number;

    /** SOILModuleData p4. */
    public p4: number;

    /** SOILModuleData p5. */
    public p5: number;

    /** SOILModuleData p6. */
    public p6: number;

    /** SOILModuleData p7. */
    public p7: number;

    /** SOILModuleData timestamp. */
    public timestamp: number;

    /**
     * Creates a new SOILModuleData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SOILModuleData instance
     */
    public static create(properties?: ISOILModuleData): SOILModuleData;

    /**
     * Encodes the specified SOILModuleData message. Does not implicitly {@link SOILModuleData.verify|verify} messages.
     * @param message SOILModuleData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISOILModuleData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SOILModuleData message, length delimited. Does not implicitly {@link SOILModuleData.verify|verify} messages.
     * @param message SOILModuleData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISOILModuleData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SOILModuleData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SOILModuleData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SOILModuleData;

    /**
     * Decodes a SOILModuleData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SOILModuleData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SOILModuleData;

    /**
     * Verifies a SOILModuleData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SOILModuleData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SOILModuleData
     */
    public static fromObject(object: { [k: string]: any }): SOILModuleData;

    /**
     * Creates a plain object from a SOILModuleData message. Also converts values to other types if specified.
     * @param message SOILModuleData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SOILModuleData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SOILModuleData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a WAModuleData. */
export class WAModuleData implements IWAModuleData {

    /**
     * Constructs a new WAModuleData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWAModuleData);

    /** WAModuleData PH. */
    public PH: number;

    /** WAModuleData EC. */
    public EC: number;

    /** WAModuleData temperature. */
    public temperature: number;

    /** WAModuleData timestamp. */
    public timestamp: number;

    /**
     * Creates a new WAModuleData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WAModuleData instance
     */
    public static create(properties?: IWAModuleData): WAModuleData;

    /**
     * Encodes the specified WAModuleData message. Does not implicitly {@link WAModuleData.verify|verify} messages.
     * @param message WAModuleData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWAModuleData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified WAModuleData message, length delimited. Does not implicitly {@link WAModuleData.verify|verify} messages.
     * @param message WAModuleData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWAModuleData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a WAModuleData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WAModuleData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WAModuleData;

    /**
     * Decodes a WAModuleData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WAModuleData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): WAModuleData;

    /**
     * Verifies a WAModuleData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WAModuleData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WAModuleData
     */
    public static fromObject(object: { [k: string]: any }): WAModuleData;

    /**
     * Creates a plain object from a WAModuleData message. Also converts values to other types if specified.
     * @param message WAModuleData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WAModuleData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WAModuleData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** RelayOutletMode enum. */
namespace RelayOutletMode {

    /** MANUAL value */
    let MANUAL: number;

    /** ALARM value */
    let ALARM: number;
}

/** Represents a CronItem. */
export class CronItem implements ICronItem {

    /**
     * Constructs a new CronItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICronItem);

    /** CronItem minute. */
    public minute: number;

    /** CronItem hour. */
    public hour: number;

    /** CronItem dayMonth. */
    public dayMonth: number;

    /** CronItem month. */
    public month: number;

    /** CronItem dayWeek. */
    public dayWeek: number;

    /**
     * Creates a new CronItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CronItem instance
     */
    public static create(properties?: ICronItem): CronItem;

    /**
     * Encodes the specified CronItem message. Does not implicitly {@link CronItem.verify|verify} messages.
     * @param message CronItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICronItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CronItem message, length delimited. Does not implicitly {@link CronItem.verify|verify} messages.
     * @param message CronItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICronItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CronItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CronItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CronItem;

    /**
     * Decodes a CronItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CronItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CronItem;

    /**
     * Verifies a CronItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CronItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CronItem
     */
    public static fromObject(object: { [k: string]: any }): CronItem;

    /**
     * Creates a plain object from a CronItem message. Also converts values to other types if specified.
     * @param message CronItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CronItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CronItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents an AlarmConfig. */
export class AlarmConfig implements IAlarmConfig {

    /**
     * Constructs a new AlarmConfig.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAlarmConfig);

    /** AlarmConfig begining. */
    public begining?: (ICronItem|null);

    /** AlarmConfig end. */
    public end?: (ICronItem|null);

    /**
     * Creates a new AlarmConfig instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AlarmConfig instance
     */
    public static create(properties?: IAlarmConfig): AlarmConfig;

    /**
     * Encodes the specified AlarmConfig message. Does not implicitly {@link AlarmConfig.verify|verify} messages.
     * @param message AlarmConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAlarmConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AlarmConfig message, length delimited. Does not implicitly {@link AlarmConfig.verify|verify} messages.
     * @param message AlarmConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAlarmConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AlarmConfig message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AlarmConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AlarmConfig;

    /**
     * Decodes an AlarmConfig message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AlarmConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AlarmConfig;

    /**
     * Verifies an AlarmConfig message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AlarmConfig message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AlarmConfig
     */
    public static fromObject(object: { [k: string]: any }): AlarmConfig;

    /**
     * Creates a plain object from an AlarmConfig message. Also converts values to other types if specified.
     * @param message AlarmConfig
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AlarmConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AlarmConfig to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a ManualConfig. */
export class ManualConfig implements IManualConfig {

    /**
     * Constructs a new ManualConfig.
     * @param [properties] Properties to set
     */
    constructor(properties?: IManualConfig);

    /** ManualConfig state. */
    public state: boolean;

    /** ManualConfig duration. */
    public duration: number;

    /**
     * Creates a new ManualConfig instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ManualConfig instance
     */
    public static create(properties?: IManualConfig): ManualConfig;

    /**
     * Encodes the specified ManualConfig message. Does not implicitly {@link ManualConfig.verify|verify} messages.
     * @param message ManualConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IManualConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ManualConfig message, length delimited. Does not implicitly {@link ManualConfig.verify|verify} messages.
     * @param message ManualConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IManualConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ManualConfig message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ManualConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ManualConfig;

    /**
     * Decodes a ManualConfig message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ManualConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ManualConfig;

    /**
     * Verifies a ManualConfig message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ManualConfig message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ManualConfig
     */
    public static fromObject(object: { [k: string]: any }): ManualConfig;

    /**
     * Creates a plain object from a ManualConfig message. Also converts values to other types if specified.
     * @param message ManualConfig
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ManualConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ManualConfig to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a RelayOutletData. */
export class RelayOutletData implements IRelayOutletData {

    /**
     * Constructs a new RelayOutletData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRelayOutletData);

    /** RelayOutletData state. */
    public state: boolean;

    /**
     * Creates a new RelayOutletData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RelayOutletData instance
     */
    public static create(properties?: IRelayOutletData): RelayOutletData;

    /**
     * Encodes the specified RelayOutletData message. Does not implicitly {@link RelayOutletData.verify|verify} messages.
     * @param message RelayOutletData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRelayOutletData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RelayOutletData message, length delimited. Does not implicitly {@link RelayOutletData.verify|verify} messages.
     * @param message RelayOutletData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRelayOutletData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RelayOutletData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RelayOutletData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RelayOutletData;

    /**
     * Decodes a RelayOutletData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RelayOutletData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RelayOutletData;

    /**
     * Verifies a RelayOutletData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RelayOutletData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RelayOutletData
     */
    public static fromObject(object: { [k: string]: any }): RelayOutletData;

    /**
     * Creates a plain object from a RelayOutletData message. Also converts values to other types if specified.
     * @param message RelayOutletData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RelayOutletData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RelayOutletData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a RelayOutletConfig. */
export class RelayOutletConfig implements IRelayOutletConfig {

    /**
     * Constructs a new RelayOutletConfig.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRelayOutletConfig);

    /** RelayOutletConfig mode. */
    public mode: RelayOutletMode;

    /** RelayOutletConfig alarm. */
    public alarm?: (IAlarmConfig|null);

    /** RelayOutletConfig manual. */
    public manual?: (IManualConfig|null);

    /**
     * Creates a new RelayOutletConfig instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RelayOutletConfig instance
     */
    public static create(properties?: IRelayOutletConfig): RelayOutletConfig;

    /**
     * Encodes the specified RelayOutletConfig message. Does not implicitly {@link RelayOutletConfig.verify|verify} messages.
     * @param message RelayOutletConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRelayOutletConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RelayOutletConfig message, length delimited. Does not implicitly {@link RelayOutletConfig.verify|verify} messages.
     * @param message RelayOutletConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRelayOutletConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RelayOutletConfig message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RelayOutletConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RelayOutletConfig;

    /**
     * Decodes a RelayOutletConfig message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RelayOutletConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RelayOutletConfig;

    /**
     * Verifies a RelayOutletConfig message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RelayOutletConfig message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RelayOutletConfig
     */
    public static fromObject(object: { [k: string]: any }): RelayOutletConfig;

    /**
     * Creates a plain object from a RelayOutletConfig message. Also converts values to other types if specified.
     * @param message RelayOutletConfig
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RelayOutletConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RelayOutletConfig to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a RelayModuleData. */
export class RelayModuleData implements IRelayModuleData {

    /**
     * Constructs a new RelayModuleData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRelayModuleData);

    /** RelayModuleData p0. */
    public p0?: (IRelayOutletData|null);

    /** RelayModuleData p1. */
    public p1?: (IRelayOutletData|null);

    /** RelayModuleData p2. */
    public p2?: (IRelayOutletData|null);

    /** RelayModuleData p3. */
    public p3?: (IRelayOutletData|null);

    /** RelayModuleData p4. */
    public p4?: (IRelayOutletData|null);

    /** RelayModuleData p5. */
    public p5?: (IRelayOutletData|null);

    /** RelayModuleData p6. */
    public p6?: (IRelayOutletData|null);

    /** RelayModuleData p7. */
    public p7?: (IRelayOutletData|null);

    /** RelayModuleData timestamp. */
    public timestamp: number;

    /**
     * Creates a new RelayModuleData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RelayModuleData instance
     */
    public static create(properties?: IRelayModuleData): RelayModuleData;

    /**
     * Encodes the specified RelayModuleData message. Does not implicitly {@link RelayModuleData.verify|verify} messages.
     * @param message RelayModuleData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRelayModuleData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RelayModuleData message, length delimited. Does not implicitly {@link RelayModuleData.verify|verify} messages.
     * @param message RelayModuleData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRelayModuleData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RelayModuleData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RelayModuleData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RelayModuleData;

    /**
     * Decodes a RelayModuleData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RelayModuleData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RelayModuleData;

    /**
     * Verifies a RelayModuleData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RelayModuleData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RelayModuleData
     */
    public static fromObject(object: { [k: string]: any }): RelayModuleData;

    /**
     * Creates a plain object from a RelayModuleData message. Also converts values to other types if specified.
     * @param message RelayModuleData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RelayModuleData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RelayModuleData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a RelayModuleConfig. */
export class RelayModuleConfig implements IRelayModuleConfig {

    /**
     * Constructs a new RelayModuleConfig.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRelayModuleConfig);

    /** RelayModuleConfig p0. */
    public p0?: (IRelayOutletConfig|null);

    /** RelayModuleConfig p1. */
    public p1?: (IRelayOutletConfig|null);

    /** RelayModuleConfig p2. */
    public p2?: (IRelayOutletConfig|null);

    /** RelayModuleConfig p3. */
    public p3?: (IRelayOutletConfig|null);

    /** RelayModuleConfig p4. */
    public p4?: (IRelayOutletConfig|null);

    /** RelayModuleConfig p5. */
    public p5?: (IRelayOutletConfig|null);

    /** RelayModuleConfig p6. */
    public p6?: (IRelayOutletConfig|null);

    /** RelayModuleConfig p7. */
    public p7?: (IRelayOutletConfig|null);

    /** RelayModuleConfig timestamp. */
    public timestamp: number;

    /**
     * Creates a new RelayModuleConfig instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RelayModuleConfig instance
     */
    public static create(properties?: IRelayModuleConfig): RelayModuleConfig;

    /**
     * Encodes the specified RelayModuleConfig message. Does not implicitly {@link RelayModuleConfig.verify|verify} messages.
     * @param message RelayModuleConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRelayModuleConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RelayModuleConfig message, length delimited. Does not implicitly {@link RelayModuleConfig.verify|verify} messages.
     * @param message RelayModuleConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRelayModuleConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RelayModuleConfig message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RelayModuleConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RelayModuleConfig;

    /**
     * Decodes a RelayModuleConfig message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RelayModuleConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RelayModuleConfig;

    /**
     * Verifies a RelayModuleConfig message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RelayModuleConfig message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RelayModuleConfig
     */
    public static fromObject(object: { [k: string]: any }): RelayModuleConfig;

    /**
     * Creates a plain object from a RelayModuleConfig message. Also converts values to other types if specified.
     * @param message RelayModuleConfig
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RelayModuleConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RelayModuleConfig to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a WCModuleData. */
export class WCModuleData implements IWCModuleData {

    /**
     * Constructs a new WCModuleData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWCModuleData);

    /** WCModuleData p0. */
    public p0?: (IRelayOutletData|null);

    /** WCModuleData p1. */
    public p1?: (IRelayOutletData|null);

    /** WCModuleData p2. */
    public p2?: (IRelayOutletData|null);

    /** WCModuleData drain. */
    public drain?: (IRelayOutletData|null);

    /** WCModuleData pump0. */
    public pump0?: (IRelayOutletData|null);

    /** WCModuleData pump1. */
    public pump1?: (IRelayOutletData|null);

    /** WCModuleData pump2. */
    public pump2?: (IRelayOutletData|null);

    /** WCModuleData pump3. */
    public pump3?: (IRelayOutletData|null);

    /** WCModuleData timestamp. */
    public timestamp: number;

    /**
     * Creates a new WCModuleData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WCModuleData instance
     */
    public static create(properties?: IWCModuleData): WCModuleData;

    /**
     * Encodes the specified WCModuleData message. Does not implicitly {@link WCModuleData.verify|verify} messages.
     * @param message WCModuleData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWCModuleData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified WCModuleData message, length delimited. Does not implicitly {@link WCModuleData.verify|verify} messages.
     * @param message WCModuleData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWCModuleData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a WCModuleData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WCModuleData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WCModuleData;

    /**
     * Decodes a WCModuleData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WCModuleData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): WCModuleData;

    /**
     * Verifies a WCModuleData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WCModuleData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WCModuleData
     */
    public static fromObject(object: { [k: string]: any }): WCModuleData;

    /**
     * Creates a plain object from a WCModuleData message. Also converts values to other types if specified.
     * @param message WCModuleData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WCModuleData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WCModuleData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a WCModuleConfig. */
export class WCModuleConfig implements IWCModuleConfig {

    /**
     * Constructs a new WCModuleConfig.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWCModuleConfig);

    /** WCModuleConfig p0. */
    public p0?: (IRelayOutletConfig|null);

    /** WCModuleConfig p1. */
    public p1?: (IRelayOutletConfig|null);

    /** WCModuleConfig p2. */
    public p2?: (IRelayOutletConfig|null);

    /** WCModuleConfig drain. */
    public drain?: (IRelayOutletConfig|null);

    /** WCModuleConfig pump0. */
    public pump0?: (IRelayOutletConfig|null);

    /** WCModuleConfig pump1. */
    public pump1?: (IRelayOutletConfig|null);

    /** WCModuleConfig pump2. */
    public pump2?: (IRelayOutletConfig|null);

    /** WCModuleConfig pump3. */
    public pump3?: (IRelayOutletConfig|null);

    /**
     * Creates a new WCModuleConfig instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WCModuleConfig instance
     */
    public static create(properties?: IWCModuleConfig): WCModuleConfig;

    /**
     * Encodes the specified WCModuleConfig message. Does not implicitly {@link WCModuleConfig.verify|verify} messages.
     * @param message WCModuleConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWCModuleConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified WCModuleConfig message, length delimited. Does not implicitly {@link WCModuleConfig.verify|verify} messages.
     * @param message WCModuleConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWCModuleConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a WCModuleConfig message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WCModuleConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WCModuleConfig;

    /**
     * Decodes a WCModuleConfig message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WCModuleConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): WCModuleConfig;

    /**
     * Verifies a WCModuleConfig message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WCModuleConfig message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WCModuleConfig
     */
    public static fromObject(object: { [k: string]: any }): WCModuleConfig;

    /**
     * Creates a plain object from a WCModuleConfig message. Also converts values to other types if specified.
     * @param message WCModuleConfig
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WCModuleConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WCModuleConfig to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}
