{"version":3,"file":"growbeWarningController.service.d.ts","sources":["growbeWarningController.service.d.ts"],"names":[],"mappingssourcesContent":["/**\n * growbe-cloud\n * Cloud server for Growbe\n *\n * The version of the OpenAPI document: 0.0.0\n * Contact: wquintal@berlingoqc.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { GrowbeWarning } from '../model/models';\nimport { GrowbeWarningExcludingId } from '../model/models';\nimport { GrowbeWarningFilter } from '../model/models';\nimport { GrowbeWarningFilter1 } from '../model/models';\nimport { GrowbeWarningPartial } from '../model/models';\nimport { GrowbeWarningPartialExcludingId } from '../model/models';\nimport { GrowbeWarningWithRelations } from '../model/models';\nimport { LoopbackCount } from '../model/models';\nimport { Configuration } from '../configuration';\nexport declare class GrowbeWarningControllerService {\n    protected httpClient: HttpClient;\n    protected basePath: string;\n    defaultHeaders: HttpHeaders;\n    configuration: Configuration;\n    encoder: HttpParameterCodec;\n    constructor(httpClient: HttpClient, basePath: string, configuration: Configuration);\n    private addToHttpParams;\n    private addToHttpParamsRecursive;\n    /**\n     * Get a filter list of GrowbeWarning\n     * @param where\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeWarningControllerCount(where?: {\n        [key: string]: object;\n    }, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<LoopbackCount>;\n    growbeWarningControllerCount(where?: {\n        [key: string]: object;\n    }, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<LoopbackCount>>;\n    growbeWarningControllerCount(where?: {\n        [key: string]: object;\n    }, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<LoopbackCount>>;\n    /**\n     * Create a new instance of GrowbeWarning\n     * @param growbeWarningExcludingId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeWarningControllerCreate(growbeWarningExcludingId?: GrowbeWarningExcludingId, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<GrowbeWarning>;\n    growbeWarningControllerCreate(growbeWarningExcludingId?: GrowbeWarningExcludingId, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<GrowbeWarning>>;\n    growbeWarningControllerCreate(growbeWarningExcludingId?: GrowbeWarningExcludingId, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<GrowbeWarning>>;\n    /**\n     * Delete a instance of GrowbeWarning\n     * @param id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeWarningControllerDeleteById(id: string, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<any>;\n    growbeWarningControllerDeleteById(id: string, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<any>>;\n    growbeWarningControllerDeleteById(id: string, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<any>>;\n    /**\n     * Get a filter list of GrowbeWarning\n     * @param filter\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeWarningControllerFind(filter?: GrowbeWarningFilter1, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<Array<GrowbeWarningWithRelations>>;\n    growbeWarningControllerFind(filter?: GrowbeWarningFilter1, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<Array<GrowbeWarningWithRelations>>>;\n    growbeWarningControllerFind(filter?: GrowbeWarningFilter1, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<Array<GrowbeWarningWithRelations>>>;\n    /**\n     * Get a filter list of GrowbeWarning\n     * @param id\n     * @param filter\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeWarningControllerFindById(id: string, filter?: GrowbeWarningFilter, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<GrowbeWarningWithRelations>;\n    growbeWarningControllerFindById(id: string, filter?: GrowbeWarningFilter, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<GrowbeWarningWithRelations>>;\n    growbeWarningControllerFindById(id: string, filter?: GrowbeWarningFilter, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<GrowbeWarningWithRelations>>;\n    /**\n     * Replace a instance of GrowbeWarning\n     * @param id\n     * @param body\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeWarningControllerReplaceById(id: string, body?: object, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<any>;\n    growbeWarningControllerReplaceById(id: string, body?: object, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<any>>;\n    growbeWarningControllerReplaceById(id: string, body?: object, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<any>>;\n    /**\n     * PATCH success count\n     * @param where\n     * @param growbeWarningPartial\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeWarningControllerUpdateAll(where?: {\n        [key: string]: object;\n    }, growbeWarningPartial?: GrowbeWarningPartial, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<LoopbackCount>;\n    growbeWarningControllerUpdateAll(where?: {\n        [key: string]: object;\n    }, growbeWarningPartial?: GrowbeWarningPartial, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<LoopbackCount>>;\n    growbeWarningControllerUpdateAll(where?: {\n        [key: string]: object;\n    }, growbeWarningPartial?: GrowbeWarningPartial, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<LoopbackCount>>;\n    /**\n     * Update a instance of GrowbeWarning\n     * @param id\n     * @param growbeWarningPartialExcludingId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeWarningControllerUpdateById(id: string, growbeWarningPartialExcludingId?: GrowbeWarningPartialExcludingId, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<any>;\n    growbeWarningControllerUpdateById(id: string, growbeWarningPartialExcludingId?: GrowbeWarningPartialExcludingId, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<any>>;\n    growbeWarningControllerUpdateById(id: string, growbeWarningPartialExcludingId?: GrowbeWarningPartialExcludingId, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<any>>;\n}\n"]}