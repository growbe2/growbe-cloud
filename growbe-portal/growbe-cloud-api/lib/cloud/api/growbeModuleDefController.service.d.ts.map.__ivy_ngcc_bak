{"version":3,"file":"growbeModuleDefController.service.d.ts","sources":["growbeModuleDefController.service.d.ts"],"names":[],"mappingssourcesContent":["/**\n * growbe-cloud\n * Cloud server for Growbe\n *\n * The version of the OpenAPI document: 0.0.0\n * Contact: wquintal@berlingoqc.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { GrowbeModuleDef } from '../model/models';\nimport { GrowbeModuleDefFilter } from '../model/models';\nimport { GrowbeModuleDefFilter1 } from '../model/models';\nimport { GrowbeModuleDefPartial } from '../model/models';\nimport { GrowbeModuleDefWithRelations } from '../model/models';\nimport { LoopbackCount } from '../model/models';\nimport { OverrideModuleDefRequest } from '../model/models';\nimport { Configuration } from '../configuration';\nexport declare class GrowbeModuleDefControllerService {\n    protected httpClient: HttpClient;\n    protected basePath: string;\n    defaultHeaders: HttpHeaders;\n    configuration: Configuration;\n    encoder: HttpParameterCodec;\n    constructor(httpClient: HttpClient, basePath: string, configuration: Configuration);\n    private addToHttpParams;\n    private addToHttpParamsRecursive;\n    /**\n     * @param id\n     * @param body\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeModuleDefControllerAddHardwareAlarm(id: string, body?: any, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: undefined;\n    }): Observable<any>;\n    growbeModuleDefControllerAddHardwareAlarm(id: string, body?: any, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: undefined;\n    }): Observable<HttpResponse<any>>;\n    growbeModuleDefControllerAddHardwareAlarm(id: string, body?: any, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: undefined;\n    }): Observable<HttpEvent<any>>;\n    /**\n     * Get a filter list of GrowbeModuleDef\n     * @param where\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeModuleDefControllerCount(where?: {\n        [key: string]: object;\n    }, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<LoopbackCount>;\n    growbeModuleDefControllerCount(where?: {\n        [key: string]: object;\n    }, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<LoopbackCount>>;\n    growbeModuleDefControllerCount(where?: {\n        [key: string]: object;\n    }, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<LoopbackCount>>;\n    /**\n     * Create a new instance of GrowbeModuleDef\n     * @param growbeModuleDef\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeModuleDefControllerCreate(growbeModuleDef?: GrowbeModuleDef, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<GrowbeModuleDef>;\n    growbeModuleDefControllerCreate(growbeModuleDef?: GrowbeModuleDef, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<GrowbeModuleDef>>;\n    growbeModuleDefControllerCreate(growbeModuleDef?: GrowbeModuleDef, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<GrowbeModuleDef>>;\n    /**\n     * Delete a instance of GrowbeModuleDef\n     * @param id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeModuleDefControllerDeleteById(id: string, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<any>;\n    growbeModuleDefControllerDeleteById(id: string, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<any>>;\n    growbeModuleDefControllerDeleteById(id: string, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<any>>;\n    /**\n     * Get a filter list of GrowbeModuleDef\n     * @param filter\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeModuleDefControllerFind(filter?: GrowbeModuleDefFilter1, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<Array<GrowbeModuleDefWithRelations>>;\n    growbeModuleDefControllerFind(filter?: GrowbeModuleDefFilter1, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<Array<GrowbeModuleDefWithRelations>>>;\n    growbeModuleDefControllerFind(filter?: GrowbeModuleDefFilter1, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<Array<GrowbeModuleDefWithRelations>>>;\n    /**\n     * Get a filter list of GrowbeModuleDef\n     * @param id\n     * @param filter\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeModuleDefControllerFindById(id: string, filter?: GrowbeModuleDefFilter, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<GrowbeModuleDefWithRelations>;\n    growbeModuleDefControllerFindById(id: string, filter?: GrowbeModuleDefFilter, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<GrowbeModuleDefWithRelations>>;\n    growbeModuleDefControllerFindById(id: string, filter?: GrowbeModuleDefFilter, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<GrowbeModuleDefWithRelations>>;\n    /**\n     * @param overrideModuleDefRequest\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeModuleDefControllerOverrideModuleDef(overrideModuleDefRequest?: OverrideModuleDefRequest, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: undefined;\n    }): Observable<any>;\n    growbeModuleDefControllerOverrideModuleDef(overrideModuleDefRequest?: OverrideModuleDefRequest, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: undefined;\n    }): Observable<HttpResponse<any>>;\n    growbeModuleDefControllerOverrideModuleDef(overrideModuleDefRequest?: OverrideModuleDefRequest, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: undefined;\n    }): Observable<HttpEvent<any>>;\n    /**\n     * @param id\n     * @param body\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeModuleDefControllerRemoveHardwareAlarm(id: string, body?: any, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: undefined;\n    }): Observable<any>;\n    growbeModuleDefControllerRemoveHardwareAlarm(id: string, body?: any, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: undefined;\n    }): Observable<HttpResponse<any>>;\n    growbeModuleDefControllerRemoveHardwareAlarm(id: string, body?: any, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: undefined;\n    }): Observable<HttpEvent<any>>;\n    /**\n     * Replace a instance of GrowbeModuleDef\n     * @param id\n     * @param body\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeModuleDefControllerReplaceById(id: string, body?: object, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<any>;\n    growbeModuleDefControllerReplaceById(id: string, body?: object, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<any>>;\n    growbeModuleDefControllerReplaceById(id: string, body?: object, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<any>>;\n    /**\n     * PATCH success count\n     * @param where\n     * @param growbeModuleDefPartial\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeModuleDefControllerUpdateAll(where?: {\n        [key: string]: object;\n    }, growbeModuleDefPartial?: GrowbeModuleDefPartial, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<LoopbackCount>;\n    growbeModuleDefControllerUpdateAll(where?: {\n        [key: string]: object;\n    }, growbeModuleDefPartial?: GrowbeModuleDefPartial, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<LoopbackCount>>;\n    growbeModuleDefControllerUpdateAll(where?: {\n        [key: string]: object;\n    }, growbeModuleDefPartial?: GrowbeModuleDefPartial, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<LoopbackCount>>;\n    /**\n     * Update a instance of GrowbeModuleDef\n     * @param id\n     * @param growbeModuleDefPartial\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    growbeModuleDefControllerUpdateById(id: string, growbeModuleDefPartial?: GrowbeModuleDefPartial, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<any>;\n    growbeModuleDefControllerUpdateById(id: string, growbeModuleDefPartial?: GrowbeModuleDefPartial, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpResponse<any>>;\n    growbeModuleDefControllerUpdateById(id: string, growbeModuleDefPartial?: GrowbeModuleDefPartial, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/json';\n    }): Observable<HttpEvent<any>>;\n}\n"]}